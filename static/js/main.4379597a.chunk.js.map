{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["ajvForData","Ajv","allErrors","verbose","validateSchema","unknownFormats","App","props","_presetSchemas","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setSchemaRef","instance","jsonEditor","schemaJsonEditor","setDataRef","dataJsonEditor","validateInputs","schema","data","ajv","validate","compile","setState","errors","console","log","e","handleChangeSchema","val","ajvForSchema","inputSchema","schemaIsValid","errorSchemaMessage","state","inputData","handleChangeData","saveDataToLocalStorage","handleChangePreset","preset","currentTarget","value","presetSchemas","set","localStorage","setItem","handleChangeExample","example","exampleDatas","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","JSON","stringify","stop","defineProperty","createEISchema","title","createFSSchema","createPNSchema","createCNEVSchema","createEnquirySchema","createAnswerSchema","createBidSchema","createACSchema","Payload of Create EI","createEIData","Payload of Create FS","createFSData","_this2","getItem","parse","_this3","_this$state","showStatus","react_default","createElement","className","onChange","keys","map","schemaName","key","disabled","onClick","length","exampleName","es","ref","mode","allowedModes","ace","theme","error","i","keyword","schemaPath","dataPath","message","entries","params","param","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4379597a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport Ajv from \"ajv\";\n\nimport { JsonEditor as Editor } from \"jsoneditor-react\";\nimport ace from \"brace\";\nimport \"brace/mode/json\";\nimport \"brace/theme/chrome\";\n\n// eslint-disable-next-line\nimport budgetSchema from \"./schemas/budget.json\";\nimport createEISchema from \"./schemas/create-ei.json\";\nimport createFSSchema from \"./schemas/create-fs.json\";\nimport createPNSchema from \"./schemas/create-pn.json\";\nimport createCNEVSchema from \"./schemas/create-cn-ev.json\";\nimport createEnquirySchema from \"./schemas/create-enquiry.json\";\nimport createAnswerSchema from \"./schemas/create-answer.json\";\nimport createBidSchema from \"./schemas/create-bid.json\";\nimport createACSchema from \"./schemas/create-ac.json\";\n\nimport createEIData from \"./examples/create-ei.json\";\nimport createFSData from \"./examples/create-fs.json\";\n\nimport \"jsoneditor-react/es/editor.min.css\";\nimport \"./App.css\";\n\nconst ajvForData = new Ajv({ allErrors: true, verbose: true, validateSchema: false, unknownFormats: \"ignore\" });\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      preset: \"\",\n      example: \"\",\n      inputSchema: {},\n      inputData: {},\n      errors: [],\n      schemaIsValid: true,\n      errorSchemaMessage: [],\n      presetSchemas: {\n        //budgetSchema,\n        [createEISchema.title]: createEISchema,\n        [createFSSchema.title]: createFSSchema,\n        [createPNSchema.title]: createPNSchema,\n        [createCNEVSchema.title]: createCNEVSchema,\n        [createEnquirySchema.title]: createEnquirySchema,\n        [createAnswerSchema.title]: createAnswerSchema,\n        [createBidSchema.title]: createBidSchema,\n        [createACSchema.title]: createACSchema,\n      },\n      exampleDatas: {\n        \"Payload of Create EI\": createEIData,\n        \"Payload of Create FS\": createFSData,\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"schemaPreset\")) {\n      const preset = localStorage.getItem(\"schemaPreset\");\n      if (preset in this.state.presetSchemas) {\n        this.setState({ preset, inputSchema: this.state.presetSchemas[preset] }, () => {\n          this.schemaJsonEditor.set(this.state.presetSchemas[preset]);\n          this.validateInputs(this.state.inputSchema, this.state.inputData);\n        });\n      }\n    }\n\n    if (localStorage.getItem(\"payloadExample\")) {\n      const example = localStorage.getItem(\"payloadExample\");\n      if (example in this.state.exampleDatas) {\n        this.setState({ example, inputData: this.state.exampleDatas[example] }, () => {\n          this.dataJsonEditor.set(this.state.exampleDatas[example]);\n          this.validateInputs(this.state.inputSchema, this.state.inputData);\n        });\n      }\n    }\n\n    if (localStorage.getItem(\"data\")) {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      this.setState({ inputData: data }, () => {\n        this.dataJsonEditor.set(data);\n        this.validateInputs(this.state.inputSchema, this.state.inputData);\n      });\n    }\n  }\n\n  setSchemaRef = (instance) => {\n    if (instance) {\n      const { jsonEditor } = instance;\n      this.schemaJsonEditor = jsonEditor;\n    } else {\n      this.schemaJsonEditor = null;\n    }\n  };\n\n  setDataRef = (instance) => {\n    if (instance) {\n      const { jsonEditor } = instance;\n      this.dataJsonEditor = jsonEditor;\n    } else {\n      this.dataJsonEditor = null;\n    }\n  };\n\n  validateInputs = (schema, data) => {\n    const ajv = new Ajv();\n    try {\n      const validate = ajv.compile(schema);\n      const valid = validate(data);\n\n      if (!valid) {\n        this.setState({ errors: validate.errors });\n        console.log(validate.errors);\n      } else {\n        this.setState({ errors: [] });\n      }\n    } catch (e) { }\n  };\n\n  handleChangeSchema = (val) => {\n    const ajvForSchema = new Ajv({ allErrors: true });\n\n    if (ajvForSchema.validateSchema(val)) {\n      this.setState(\n        {\n          inputSchema: val,\n          schemaIsValid: true,\n          errorSchemaMessage: [],\n        },\n        () => {\n          this.validateInputs(this.state.inputSchema, this.state.inputData);\n        }\n      );\n    } else {\n      this.setState({ errors: [], schemaIsValid: false, errorSchemaMessage: ajvForSchema.errors });\n    }\n  };\n\n  handleChangeData = (val) => {\n    this.setState({ inputData: val }, () => {\n      this.validateInputs(this.state.inputSchema, this.state.inputData);\n      this.saveDataToLocalStorage();\n    });\n  };\n\n  handleChangePreset = (e) => {\n    this.setState(\n      {\n        preset: e.currentTarget.value,\n        inputSchema: this.state.presetSchemas[e.currentTarget.value] || {},\n        errors: [],\n        schemaIsValid: true,\n        errorSchemaMessage: [],\n      },\n      () => {\n        this.schemaJsonEditor.set(this.state.inputSchema);\n        this.validateInputs(this.state.inputSchema, this.state.inputData);\n      }\n    );\n    localStorage.setItem(\"schemaPreset\", e.currentTarget.value);\n  };\n\n  handleChangeExample = (e) => {\n    this.setState(\n      {\n        example: e.currentTarget.value,\n        inputData: this.state.exampleDatas[e.currentTarget.value] || {},\n        errors: [],\n      },\n      () => {\n        this.dataJsonEditor.set(this.state.inputData);\n        this.validateInputs(this.state.inputSchema, this.state.inputData);\n      }\n    );\n    localStorage.setItem(\"payloadExample\", e.currentTarget.value);\n  };\n\n  saveDataToLocalStorage = async () => {\n    localStorage.setItem(\"data\", JSON.stringify(this.state.inputData));\n  };\n\n  render() {\n    const { preset, example, inputSchema, inputData, presetSchemas, exampleDatas, errors, schemaIsValid, errorSchemaMessage } = this.state;\n    const showStatus = !!inputSchema && !!inputData;\n\n    return (\n      <div className=\"App\">\n        <div className=\"presets\">\n          <div className=\"schema-preset\">\n            <h3>Presets schemas</h3>\n            <select className=\"preset-select\" value={preset} onChange={this.handleChangePreset}>\n              <option value=\"\">-</option>\n              {Object.keys(presetSchemas).map(schemaName => (<option key={schemaName} value={schemaName}>{schemaName}</option>))}\n            </select>\n            <button\n              className=\"validate-button\"\n              disabled={!schemaIsValid}\n              onClick={() => this.validateInputs(inputSchema, inputData)}>\n              Validate\n          </button>\n            {showStatus && schemaIsValid && (\n              <span\n                className={\n                  !!errors.length ? \"validate-status validate-status_invalid\" : \"validate-status validate-status_valid\"\n                }>\n                {!!errors.length ? \"Data is not valid\" : \"Data is valid\"}\n              </span>\n            )}\n            {!schemaIsValid && <span className=\"validate-status validate-status_invalid\">Error parsing schema</span>}\n          </div>\n          <div className=\"data-preset\">\n            <h3>Example of payload</h3>\n            <select className=\"preset-select\" value={example} onChange={this.handleChangeExample}>\n              <option value=\"\">-</option>\n              {Object.keys(exampleDatas).map(exampleName => (<option key={exampleName} value={exampleName}>{exampleName}</option>))}\n            </select>\n          </div>\n        </div>\n        <div className=\"editors\">\n          <div className=\"schema-editor\">\n            <h2>Schema</h2>\n            <Editor\n              ref={this.setSchemaRef}\n              value={inputSchema}\n              mode=\"view\"\n              allowedModes={[\"view\", \"code\"]}\n              onChange={this.handleChangeSchema}\n              ace={ace}\n              theme=\"ace/theme/chrome\"\n            />\n          </div>\n          <div className=\"data-editor\">\n            <h2>Payload</h2>\n            <Editor\n              ref={this.setDataRef}\n              value={inputData}\n              mode=\"code\"\n              onChange={this.handleChangeData}\n              ace={ace}\n              theme=\"ace/theme/chrome\"\n              ajv={ajvForData}\n              schema={inputSchema}\n            />\n          </div>\n        </div>\n        {!!errors.length && <h3>Errors</h3>}\n        <div className=\"errors\">\n          {errors.map((error, i) => (\n            <div className=\"error\" key={i}>\n              <h4>№ {i + 1}</h4>\n              <p>\n                Keyword of error: <b>{error.keyword}</b>\n              </p>\n              <p>\n                Schema path: <b>{error.schemaPath}</b>\n              </p>\n              <p>\n                Data path: <b>{error.dataPath || \"-\"}</b>\n              </p>\n              <p>\n                Message: <b>{error.message}</b>\n              </p>\n              {\"params\" in error && <p>Details:</p>}\n              {\"params\" in error && (\n                <ul>\n                  {Object.entries(error.params).map((param) => (\n                    <li key={param[0]}>\n                      {param[0]} : <b>{param[1] || \"-\"}</b>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {!!errorSchemaMessage.length && <h3>Errors in schema</h3>}\n        <div className=\"errors\">\n          {errorSchemaMessage.map((error, i) => (\n            <div className=\"error\" key={i}>\n              <h4>№ {i + 1}</h4>\n              <p>\n                Keyword of error: <b>{error.keyword}</b>\n              </p>\n              <p>\n                Schema path: <b>{error.schemaPath}</b>\n              </p>\n              <p>\n                Data path: <b>{error.dataPath || \"-\"}</b>\n              </p>\n              <p>\n                Message: <b>{error.message}</b>\n              </p>\n              {\"params\" in error && <p>Details:</p>}\n              {\"params\" in error && (\n                <ul>\n                  {Object.entries(error.params).map((param) => (\n                    <li key={param[0]}>\n                      {param[0]} : <b>{param[1] || \"-\"}</b>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"normalize.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}